body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen",
    "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue",
    sans-serif;
  font-weight: 200;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

a {
  text-decoration: none;
}

/* Variables */

$primary: #0075ff;

$light-color: $primary;
$light-offset: 3px;
$light-diffusion: 5px;
$animation-duration: 5s;
$animation-steps: (
  0%: on,
  3%: off,
  5%: on,
  15%: off,
  100%: off,
);
$animation: (
  0%: on,
  3%: off,
  5%: on,
  15%: off,
  100%: off,
);
$positions: ((2, 3), (3, 3), (4, 2), (3, 1), (2, 1), (1, 2));

/* Mixins */

@mixin bg-status($status) {
  @if $status == "on" {
    opacity: 0.7;
  } @else if $status == "off" {
    opacity: 0.4;
  }
}

@mixin text-status($status) {
  @if $status == "on" {
    color: white;
    text-shadow: (-$light-offset) (-$light-offset) $light-diffusion $light-color,
      $light-offset (-$light-offset) $light-diffusion $light-color,
      $light-offset $light-offset $light-diffusion $light-color,
      (-$light-offset) $light-offset $light-diffusion $light-color;
  } @else if $status == "off" {
    color: darken(white, 60);
    text-shadow: none;
  }
}

/* Animations */

@keyframes bg-animation {
  @each $step, $value in $animation-steps {
    #{$step} {
      @include bg-status($value);
    }
  }
}

@keyframes text-animation {
  @each $step, $value in $animation-steps {
    #{$step} {
      @include text-status($value);
    }
  }
}

/* Style */

.page {
  width: 100vw;
  height: 100vh;
  overflow-x: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  background-color: black;
}

.neon {
  margin: 0;
  letter-spacing: 3px;
  font-weight: inherit;
}

.neon {
  position: relative;
  display: inline-block;
  z-index: 1;
  @include text-status(on);

  &:before {
    content: "";
    position: absolute;
    z-index: -1;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    transform: scale(2, 4);
    animation-name: bg-animation;
    animation-duration: $animation-duration;
    animation-iteration-count: infinite;
    background-image: radial-gradient($light-color 0%, transparent 70%);
    @include bg-status(off);
  }

  span {
    @include text-status(off);
    animation-name: text-animation;
    animation-duration: $animation-duration;
    animation-iteration-count: infinite;
  }
}

.hive {
  position: relative;
  margin-top: 70px;
}

.super {
  margin: 0;
  list-style: none;
}

.bee {
  display: block;

  .icon {
    width: 60px;
    height: 72px;
    transition: opacity 300ms ease-in-out;
    opacity: 0.5;
    will-change: opacity;
    display: flex;
    align-items: center;
    justify-content: center;

    svg {
      position: absolute;
      color: $primary;
    }

    img {
      max-width: 100%;
    }

    i {
      color: white
    }
  }

  &:hover,
  &:focus {
    outline: none;

    .icon {
      opacity: 1;
    }
  }
}

.queen {
  background: none;
  border: none;
  padding: 0;
  position: relative;
  z-index: 1;
  cursor: pointer;

  .awake & {
    img {
      opacity: 1;
    }
  }
}

.worker {
  position: absolute;
  z-index: -1;
  display: block;
  opacity: 0;
  transition: opacity 300ms ease-in-out, transform 300ms ease-in-out,
    z-index 0ms;
  will-change: opacity, transform;

  $cache: &;

  @at-root .cell {
    @each $col, $row in $positions {
      $i: index(($positions), ($col, $row));

      &:nth-child(#{$i}) #{$cache} {
        $left: -100%;
        $top: -73%;
        $x: 10%;
        $y: 10%;

        @if $col == 2 {
          $left: -50%;
          $x: 10%;
        } @else if $col == 3 {
          $left: 50%;
          $x: -10%;
        } @else if $col == 4 {
          $left: 100%;
          $x: -10%;
        }

        @if $row == 2 {
          $top: 0%;
          $y: 0%;
        } @else if $row == 3 {
          $top: 73%;
          $y: -10%;
        }

        top: #{$top};
        left: #{$left};
        transform: translate(#{$x}, #{$y});

        .awake & {
          transition-delay: #{$i - 1} + "00ms";
        }
      }

      &:nth-last-child(#{$i}) #{$cache} {
        transition-delay: #{$i - 1} + "00ms", #{$i - 1} + "00ms",
          #{$i + 2} + "00ms";
      }
    }

    #{$cache} {
      &:focus {
        transition-delay: 0ms;
      }

      &:focus,
      .awake & {
        z-index: 1;
        opacity: 1;
        transform: translate(0%, 0%);
      }
    }
  }
}
